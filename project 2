import tkinter as tk
import time
import random

SAMPLE_TEXTS = [
    "The quick brown fox jumps over the lazy dog.",
    "Python is a powerful programming language.",
    "Practice makes a man perfect.",
    "Artificial Intelligence is the future.",
    "Typing fast requires practice and accuracy."
]

class TypingSpeedApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Typing Speed Calculator")
        self.root.geometry("500x300")
        
        self.sample_text = random.choice(SAMPLE_TEXTS)
        self.start_time = None
        
        self.label = tk.Label(root, text=self.sample_text, wraplength=400, font=("Arial", 12))
        self.label.pack(pady=10)
        
        self.entry = tk.Entry(root, width=50)
        self.entry.pack(pady=10)
        self.entry.bind("<FocusIn>", self.start_timer)
        
        self.submit_button = tk.Button(root, text="Check Speed", command=self.calculate_speed)
        self.submit_button.pack(pady=5)
        
        self.result_label = tk.Label(root, text="", font=("Arial", 12))
        self.result_label.pack(pady=10)
        
    def start_timer(self, event):
        if self.start_time is None:
            self.start_time = time.time()
    
    def calculate_speed(self):
        if self.start_time is None:
            self.result_label.config(text="Start typing first!")
            return
        
        end_time = time.time()
        elapsed_time = end_time - self.start_time
        typed_text = self.entry.get()
        typed_words = len(typed_text.split())
        
        if typed_words == 0:
            self.result_label.config(text="Please type something!")
            return
        
        wpm = (typed_words / elapsed_time) * 60
        accuracy = sum(1 for a, b in zip(typed_text, self.sample_text) if a == b) / max(len(self.sample_text), 1) * 100
        
        self.result_label.config(text=f"Speed: {wpm:.2f} WPM | Accuracy: {accuracy:.2f}%")

# Run the app
if __name__ == "__main__":
    root = tk.Tk()
    app = TypingSpeedApp(root)
    root.mainloop()
